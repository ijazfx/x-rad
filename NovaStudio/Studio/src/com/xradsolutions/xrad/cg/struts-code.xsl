<?xml version='1.0'?>
<xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
<xsl:output method="text"/>
<xsl:template match="/app-model">
<xsl:if test="view">
<xsl:for-each select="view">{BeginFile}
//@Location <xsl:value-of select="replace(@package-name, '[.]', '/')"/>
//@File <xsl:value-of select="@name"/>Form.java
//AUTO-GENERATED FILE GENERATED BY X-RAD STRUTS CODE GENERATOR 1.0
//CODE WRITTEN IN user-code BLOCK WILL BE PRESERVED IF THE CODE IS
//REGENERATED USING X-RAD CODE GENERATOR.
package <xsl:value-of select="@package-name"/>;

//@begin-imports

import javax.servlet.http.*;
import org.apache.struts.action.*;

//@end-imports

//@begin-class

public class <xsl:value-of select="@name"/>Form
    extends ActionForm {

	//@begin-properties

	<xsl:for-each select="property">private <xsl:value-of select="@type"/><xsl:text> </xsl:text><xsl:value-of select="@name"/>;
	</xsl:for-each>
	private String xradSubmitMethod;
	
	//@end-properties
	
	//@begin-validate

	public ActionErrors validate(ActionMapping actionMapping,
		HttpServletRequest httpServletRequest) {
		
		//@begin-user-code
		
		//@todo Add your code here to validate the form
		
		//@end-user-code
		
		return null;
	}

	//@end-validate

	//@begin-reset

	public void reset(ActionMapping actionMapping,
		HttpServletRequest servletRequest) {
		
		//@begin-user-code
		
		//@todo Add your code here to reset the form
		
		//@end-user-code
	}

	//@end-reset

	//@begin-getters-setters
	<xsl:for-each select="property">
	public <xsl:value-of select="@type"/> get<xsl:value-of select="substring(upper-case(@name), 1, 1)"/><xsl:value-of select="substring(@name, 2)"/>() {
		return <xsl:value-of select="@name"/>;
	}

	public void set<xsl:value-of select="substring(upper-case(@name), 1, 1)"/><xsl:value-of select="substring(@name, 2)"/>(<xsl:value-of select="@type"/><xsl:text> </xsl:text><xsl:value-of select="@name"/>) {
		this.<xsl:value-of select="@name"/> = <xsl:value-of select="@name"/>;
	}
	</xsl:for-each>

	public String getXradSubmitMethod() {
		return xradSubmitMethod;
	}

	public void setXradSubmitMethod(String xradSubmitMethod) {
		this.xradSubmitMethod = xradSubmitMethod;
	}
	
	//@end-getters-setters

}

//@end-class
{EndFile}
{BeginFile}
//@Location <xsl:value-of select="replace(@package-name, '[.]', '/')"/>
//@File <xsl:value-of select="@name"/>FormAction.java
//AUTO-GENERATED FILE GENERATED BY X-RAD STRUTS CODE GENERATOR 1.0
//CODE WRITTEN IN user-code BLOCK WILL BE PRESERVED IF THE CODE IS
//REGENERATED USING X-RAD CODE GENERATOR.
package <xsl:value-of select="@package-name"/>;

//@begin-imports

import javax.servlet.http.*;
import org.apache.struts.action.*;

//@end-imports

//@begin-class

public class <xsl:value-of select="@name"/>FormAction
    extends Action {
	<xsl:if test="submit-method">
	//@begin-submit-method-constants

	<xsl:for-each select="submit-method">public static final String <xsl:value-of select="upper-case(@name)"/> = "<xsl:value-of select="@name"/>";
	</xsl:for-each>
	//@end-submit-method-constants
	</xsl:if>
    //@begin-execute
    
	public ActionForward execute(ActionMapping actionMapping,
		ActionForm actionForm,
		HttpServletRequest servletRequest,
		HttpServletResponse servletResponse) {
		
		<xsl:value-of select="@name"/>Form <xsl:value-of select="@id"/>Form = (<xsl:value-of select="@name"/>Form) actionForm;
		String xradSubmitMethod = <xsl:value-of select="@id"/>Form.getXradSubmitMethod();
		<xsl:if test="submit-method">
		<xsl:for-each select="submit-method">
		if(<xsl:value-of select="upper-case(@name)"/>.equals(xradSubmitMethod)) {
			return <xsl:value-of select="@name"/>(actionMapping, actionForm, servletRequest, servletResponse);
		}
		</xsl:for-each>
		</xsl:if>
		throw new java.lang.UnsupportedOperationException(
			"Unexpected xradSubmitMethod" + xradSubmitMethod);
	}
	
	//@end-execute
	<xsl:if test="submit-method">
	//@begin-submit-methods
	<xsl:for-each select="submit-method">
	public ActionForward <xsl:value-of select="@name"/>(ActionMapping actionMapping,
		ActionForm actionForm,
		HttpServletRequest servletRequest,
		HttpServletResponse servletResponse) {

		<xsl:value-of select="../@name"/>Form <xsl:value-of select="../@id"/>Form = (<xsl:value-of select="../@name"/>Form) actionForm;

		//@begin-user-code

		//@todo Add your code here

		//@end-user-code

		//DO NOT REMOVE FOLLOWING LINE!!
		return actionMapping.findForward(<xsl:value-of select="upper-case(@name)"/>);
	}
	</xsl:for-each>
	//@end-submit-methods
	</xsl:if>
}

//@end-class
{EndFile}
</xsl:for-each>
</xsl:if>
<xsl:if test="process">
<xsl:for-each select="process">{BeginFile}
//@Location <xsl:value-of select="replace(@package-name, '[.]', '/')"/>
//@File <xsl:value-of select="@name"/>Action.java
//AUTO-GENERATED FILE GENERATED BY X-RAD STRUTS CODE GENERATOR 1.0
//CODE WRITTEN IN user-code BLOCK WILL BE PRESERVED IF THE CODE IS
//REGENERATED USING X-RAD CODE GENERATOR.
package <xsl:value-of select="@package-name"/>;

//@begin-imports

import javax.servlet.http.*;
import org.apache.struts.action.*;

//@end-imports

//@begin-class

public class <xsl:value-of select="@name"/>Action
    extends Action {
	<xsl:if test="return-value">	
	//@begin-return-value-constants

	<xsl:for-each select="return-value">public static final String <xsl:value-of select="upper-case(@text)"/> = "<xsl:value-of select="@text"/>";
	</xsl:for-each>
	//@end-return-value-constants
	</xsl:if>
    
	public ActionForward execute(ActionMapping actionMapping,
		ActionForm actionForm,
		HttpServletRequest servletRequest,
		HttpServletResponse servletResponse) {

		String returnValue = null;
		<xsl:if test="return-value">
		//IMPORTANT!!! YOUR CODE MUST SET VALUE OF returnValue VARIABLE
		//TO ONE OF THE VALUES SPECIFIED IN THE return-value-constants
		//BLOCK. BY DEFAULT, X-RAD CODE GENERATOR SETS THE VALUE OF 
		//returnValue TO FIRST VALUE IN THE return-value-constants BLOCK.
		
		returnValue = <xsl:value-of select="upper-case(return-value[1]/@text)"/>;
		</xsl:if>
		//@begin-user-code		

		//@todo Add your code here

		//@end-user-code

		//DO NOT REMOVE FOLLOWING LINE!!!
		return actionMapping.findForward(returnValue);
	}
	
	//@end-execute
	
}

//@end-class
{EndFile}
</xsl:for-each>
</xsl:if>
</xsl:template>
</xsl:stylesheet>